# This is a basic workflow to help you get started with Actions

name: Distribute

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - name: Install Flutter
        uses: britannio/action-install-flutter@v1
        with:
          version: 2.8.0
          
      - name: Get Packages
      - run: flutter pub get
      
      - name: Build APK
      - run: flutter build apk
      
      - name: Configure Keystore
        run: |
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > app/keystore.jks
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
          
      - name: Fetch credential file
        uses: timheuer/base64-to-file@v1.1
        with:
          encodedString: ${{ secrets.FIREBASE_CREDENTIALS }}
          filename: credential_file.json
          destination-path: ${{ github.workspace }}/Firebase-Distribution-Github-Action/

      - name: Firebase App Distribution
#        # You may pin to the exact commit or the version.
        # uses: wzieba/Firebase-Distribution-Github-Action@d6e3b20d53da54e1ffd2082a8132e120b5bd1bb2
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          # App id can be found on the General Settings page
          appId: ${{ secrets.FIREBASE_APP_ID }}
          # Upload token - see Firebase CLI Reference
          # Reemplazado por service credential
          # token: 1//0hNthebDrm-50CgYIARAAGBESNwF-L9Irq67Y3grZ6HVLhajuHoY_H_lmO_yGeOCne5F8YW_7RbyBnkHM5jhx9qWRPevW_NhV8pg
          # Service credential file
          serviceCredentialsFile: ${{ github.workspace }}/Firebase-Distribution-Github-Action/src/credential_file.json
          # Artifact to upload (.apk or .ipa)
          file: ${{ github.workspace }}/src/build/app/outputs/flutter-apk/app-release.apk
          # Distribution groups
          # groups: Develop
          # Release notes visible on release page
#          releaseNotes: # optional
          # Release notes visible on release page
#          releaseNotesFile: # optional
          # Flag that can included to print verbose log output.
#          debug: # optional
